{"version":3,"file":"plugins/extension/contentscripts/snapshotter.bundle.js","mappings":"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","sources":["webpack://aqaextensionspagecapture/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://aqaextensionspagecapture/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://aqaextensionspagecapture/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://aqaextensionspagecapture/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://aqaextensionspagecapture/./src/extension/contentscripts/snapshotter.ts","webpack://aqaextensionspagecapture/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","const validHeadChildren = ['title', 'base', 'link', 'meta', 'script', 'style'];\n\nconst voidElms = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n];\n\nconst extraVoidElms = ['noscript', 'iframe'];\n\nconst blockNodeNames = [\n  'address',\n  'article',\n  'aside',\n  'blockquote',\n  'details',\n  'dialog',\n  'dd',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'li',\n  'main',\n  'nav',\n  'ol',\n  'p',\n  'pre',\n  'section',\n  'ul',\n];\n\nconst tableCompNames = ['table', 'thead', 'tbody', 'tfoot', 'tr', 'td', 'th', 'col', 'colgroup', 'caption'];\n\nconst notNestableElms = ['form', 'a'];\n\nconst pseudoStatesMap: Record<string, string> = {\n  active: 'a',\n  hover: 'b',\n};\nconst pseudoStates = Object.keys(pseudoStatesMap);\n\nconst clonedDocument = document.implementation.createHTMLDocument('');\n\nconst childNodes = (node: Node): Node[] => {\n  // TODO: import shadowRoot rewrite at document init\n  const shadowRoot = (node as Element).shadowRoot;\n  const children: Node[] = Array.from(node.childNodes || []);\n  // TODO: double-check behaviour with custom shadowRoots and slot elements (thanks to execution context we shouldn't do anything)\n  if (shadowRoot) {\n    children.unshift(shadowRoot);\n  }\n  return children;\n};\n\nclass Snapshotter {\n  _nodeId: number;\n\n  _document: Document;\n\n  _docType: string;\n\n  _insideHead: boolean;\n\n  _insideParagraph: boolean;\n\n  _insideMalformedSelect: boolean;\n\n  _insideDescriptionItem: boolean;\n\n  _insideButton: boolean;\n\n  _insideMalformedIODescendant: boolean;\n\n  _insideSVG: boolean;\n\n  _selectElmsMap: Map<HTMLSelectElement, Element>;\n\n  _nestedElmsCounts: Record<string, number>;\n\n  _activeElement: Element | null;\n\n  _elmsInPseudoState: Record<string, Element[]>;\n\n  constructor(doc: Document) {\n    this._nodeId = 0;\n    this._document = doc;\n    this._docType = '';\n    this._insideHead = false;\n    this._insideParagraph = false;\n    this._insideMalformedSelect = false;\n    this._insideDescriptionItem = false;\n    this._insideButton = false;\n    this._insideMalformedIODescendant = false;\n    this._insideSVG = false;\n    this._selectElmsMap = new Map();\n    this._nestedElmsCounts = {};\n    notNestableElms.forEach((nodeName) => {\n      this._nestedElmsCounts[nodeName] = 0;\n    });\n    this._activeElement = document.activeElement;\n    while (this._activeElement?.shadowRoot) {\n      this._activeElement = this._activeElement.shadowRoot.activeElement;\n    }\n    this._elmsInPseudoState = {};\n    pseudoStates.forEach((pseudoState) => {\n      this._elmsInPseudoState[pseudoState] = [];\n    });\n    this._importElmsInPseudoState(this._document);\n    this._document.removeChild(this._document.documentElement);\n    this._document.appendChild(this._document.importNode(document.documentElement, false));\n    childNodes(document.documentElement).forEach((node) => {\n      this._importNode(node, this._document.documentElement);\n    });\n    // Setting/removing selected attribute from options\n    this._selectElmsMap.forEach((clonedElm, elm) => {\n      const realOpts = elm.querySelectorAll('option');\n      const clonedOpts = elm.querySelectorAll('option, un-es-replace[un-nodename=\"option\"]');\n      const optsCount = realOpts.length;\n      for (let i = 0; i < optsCount; i += 1) {\n        const realOpt = realOpts[i];\n        const clonedOpt = clonedOpts[i];\n        if (realOpt.selected) {\n          clonedOpt.setAttribute('selected', 'selected');\n        } else {\n          clonedOpt.removeAttribute('selected');\n        }\n      }\n    });\n    // Converting wrong html children in un-es-replace comments\n    const htmlChildren = childNodes(this._document.documentElement);\n    htmlChildren.forEach((child) => {\n      const nodeName = (child.nodeName || '').toLowerCase();\n      if (nodeName && !nodeName.startsWith('#') && child !== this._document.head && child !== this._document.body) {\n        const comment = this._document.createComment(\n          `un-es-replace:${encodeURIComponent((child as Element).outerHTML)}`,\n        );\n        child.parentNode?.replaceChild(comment, child);\n      }\n    });\n    // Converting <un-es-replace> nodes in scripts if they are a descendant of head (see #AUT-2726)\n    const headChildrenToReplace = this._document.querySelectorAll('head > un-es-replace');\n    for (let i = headChildrenToReplace.length - 1; i >= 0; i -= 1) {\n      const child = headChildrenToReplace[i];\n      const scriptElm = this._document.createElement('script');\n      scriptElm.setAttribute('type', 'text/un-es-replace');\n      scriptElm.innerHTML = encodeURIComponent(child.outerHTML);\n      this._document.head.replaceChild(scriptElm, child);\n    }\n    // Converting text nodes in scripts if they are a descendant of head\n    const headChildren = this._document.head ? childNodes(this._document.head) : [];\n    for (let i = headChildren.length - 1; i >= 0; i -= 1) {\n      const nodeName = headChildren[i].nodeName || '';\n      if (nodeName === '#text' && (headChildren[i].nodeValue || '').trim() !== '') {\n        const scriptElm = this._document.createElement('script');\n        scriptElm.setAttribute('type', 'text/un-es-replace');\n        scriptElm.innerHTML = encodeURIComponent(headChildren[i].nodeValue ?? '');\n        this._document.head.replaceChild(scriptElm, headChildren[i]);\n      }\n    }\n    const { doctype } = document;\n    if (doctype?.name) {\n      this._docType = `<!DOCTYPE ${doctype.name}${doctype.publicId ? ` PUBLIC \"${doctype.publicId}\"` : ''}${\n        !doctype.publicId && doctype.systemId ? ' SYSTEM' : ''\n      }${doctype.systemId ? ` \"${doctype.systemId}\"` : ''}>`;\n    }\n  }\n\n  get html(): string {\n    return this._docType + this._document.documentElement.outerHTML;\n  }\n\n  static run(): string {\n    clonedDocument.open();\n    clonedDocument.close();\n    const snapshot = new Snapshotter(clonedDocument);\n    return snapshot.html;\n  }\n\n  _importElmsInPseudoState(context: Document | ShadowRoot): void {\n    pseudoStates.forEach((pseudoState) => {\n      const targetElms = Array.from(context.querySelectorAll(`*:${pseudoState}`) || []);\n      if (targetElms.length) {\n        this._elmsInPseudoState[pseudoState] = this._elmsInPseudoState[pseudoState].concat(targetElms);\n      }\n    });\n  }\n\n  _importNode(node: Node, clonedParent: Node): void {\n    if (!node) {\n      return;\n    }\n    let nodeName = (node.nodeName || '').toLocaleLowerCase();\n    if (!nodeName) {\n      return;\n    }\n\n    const canBeProcessorOf = {\n      head: !this._insideHead,\n      paragraph: !this._insideParagraph,\n      malformedSelect: !this._insideMalformedSelect,\n      descriptionItem: !this._insideDescriptionItem,\n      button: !this._insideButton,\n      malformedIODescendant: !this._insideMalformedIODescendant,\n      svg: !this._insideSVG,\n    };\n\n    let orNodeName = nodeName;\n    let nodeNameAttr = null;\n    let isNestedElm = false;\n    let clonedElm: Node | null = null;\n    if (node instanceof ShadowRoot) {\n      clonedElm = this._document.createElement('un-shadow-elm');\n      this._importElmsInPseudoState(node);\n    } else if (node.nodeType === Node.TEXT_NODE) {\n      clonedElm = this._document.createTextNode(node.nodeValue ?? '');\n    } else if (node.nodeType === Node.CDATA_SECTION_NODE) {\n      const xmlDoc = new DOMParser().parseFromString('<xml></xml>', 'application/xml');\n      clonedElm = xmlDoc.createCDATASection(node.nodeValue ?? '');\n    } else if (node.nodeType === Node.PROCESSING_INSTRUCTION_NODE) {\n      const processingInstruction = node as ProcessingInstruction;\n      clonedElm = this._document.createProcessingInstruction(processingInstruction.target, processingInstruction.data);\n    } else if (node.nodeType === Node.COMMENT_NODE) {\n      let parentNodeName = (clonedParent.nodeName || '').toLowerCase();\n      if (parentNodeName === 'un-es-replace') {\n        parentNodeName = (clonedParent as Element).getAttribute('un-nodename') ?? '';\n      }\n      if (parentNodeName === 'style') {\n        return;\n      }\n      clonedElm = this._document.createComment(node.nodeValue ?? '');\n    } else {\n      let parentNodeName = (clonedParent.nodeName || '').toLowerCase();\n      if (parentNodeName === 'un-es-replace') {\n        parentNodeName = (clonedParent as Element).getAttribute('un-nodename') ?? '';\n      }\n      isNestedElm = typeof this._nestedElmsCounts[nodeName] !== 'undefined';\n      if (isNestedElm) {\n        this._nestedElmsCounts[nodeName] += 1;\n        if (this._nestedElmsCounts[nodeName] > 1) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        }\n      }\n      if (nodeName !== 'un-es-replace') {\n        const elmQuerySelectorAll = (selectors: string): Element[] => {\n          let descendants: Element[] = [];\n          try {\n            descendants = Array.from((node as Element).querySelectorAll(selectors));\n          } catch (e) {\n            descendants = [];\n          }\n          return descendants;\n        };\n        const inlineOnlyMode = this._insideParagraph || this._insideButton;\n        if (\n          (nodeName === 'html' && node !== document.documentElement) ||\n          (nodeName === 'head' && node !== document.head) ||\n          (nodeName === 'body' && node !== document.body)\n        ) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (nodeName === 'script' || nodeName === 'style') {\n          if (node.childNodes.length > 1 || elmQuerySelectorAll('*').length > 0) {\n            nodeNameAttr = nodeName;\n            nodeName = 'un-es-replace';\n          } else if (!(node.textContent || '').includes(`</${nodeName}>`)) {\n            const tmpDiv = this._document.createElement('div');\n            tmpDiv.innerHTML = node.textContent ?? '';\n            if (tmpDiv.childNodes.length > 1 || tmpDiv.querySelectorAll('*').length) {\n              nodeNameAttr = nodeName;\n              nodeName = 'un-es-replace';\n            }\n          } else {\n            nodeNameAttr = nodeName;\n            nodeName = 'un-es-replace';\n          }\n        } else if (nodeName === 'image') {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (this._insideHead && !validHeadChildren.includes(nodeName)) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (\n          (extraVoidElms.includes(nodeName) || voidElms.includes(nodeName)) &&\n          elmQuerySelectorAll('*').length > 0\n        ) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (\n          this._insideMalformedSelect ||\n          (nodeName === 'select' && elmQuerySelectorAll('*:not(option):not(optgroup)').length > 0)\n        ) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n          this._insideMalformedSelect = true; // Updating status variable\n        } else if (\n          this._insideMalformedIODescendant ||\n          (inlineOnlyMode && (blockNodeNames.includes(nodeName) || tableCompNames.includes(nodeName)))\n        ) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n          this._insideMalformedIODescendant = true; // Updating status variable\n        } else if (tableCompNames.includes(nodeName)) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (nodeName === 'li' && parentNodeName !== 'ul' && parentNodeName !== 'ol') {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (this._insideDescriptionItem && (nodeName === 'dd' || nodeName === 'dt')) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (this._insideButton && nodeName === 'button') {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (node instanceof HTMLTemplateElement) {\n          // TODO: double-check if it's possible to use template nodeName\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        } else if (this._insideSVG && !(node instanceof SVGElement)) {\n          nodeNameAttr = nodeName;\n          nodeName = 'un-es-replace';\n        }\n      }\n\n      // Updating status variables\n      if (node === document.head) {\n        this._insideHead = true;\n      } else if (nodeName === 'p') {\n        this._insideParagraph = true;\n      } else if (nodeName === 'dd' || nodeName === 'dt') {\n        this._insideDescriptionItem = true;\n      } else if (nodeName === 'dl') {\n        this._insideDescriptionItem = false;\n      } else if (nodeName === 'button') {\n        this._insideButton = true;\n      } else if (nodeName === 'svg') {\n        this._insideSVG = true;\n      }\n\n      // Creating clone\n      try {\n        clonedElm = this._document.createElement(nodeName);\n        if (nodeNameAttr) {\n          orNodeName = nodeNameAttr;\n        }\n      } catch (e) {\n        try {\n          // Workaround for invalid nodeName\n          const tmpElm = this._document.createElement('div');\n          tmpElm.innerHTML = `<${nodeName}></${nodeName}>`;\n          if (tmpElm.firstChild) {\n            clonedElm = tmpElm.firstChild as Element;\n          }\n        } catch (e2) {\n          // eslint-disable-line no-shadow\n          clonedElm = null;\n        }\n      }\n\n      if (clonedElm !== null && clonedElm instanceof Element) {\n        if (nodeNameAttr) {\n          clonedElm.setAttribute('un-nodename', orNodeName);\n        }\n\n        // Importing attributes\n        const attributes = Array.from((node as Element).attributes);\n        const attributesCount = attributes.length;\n        for (let i = 0; i < attributesCount; i += 1) {\n          const attribute = attributes[i];\n          /**\n           * Try-Catch is needed because sometimes attribute.name\n           * could be NOT valid and to generate a DOM exception\n           */\n          try {\n            clonedElm.setAttribute(attribute.name, attribute.value);\n          } catch (e) {\n            // continue\n          }\n        }\n\n        if ((node instanceof HTMLMediaElement || node instanceof HTMLImageElement) && node.currentSrc) {\n          clonedElm.setAttribute('un-curr-src', node.currentSrc);\n        } else if (node instanceof HTMLIFrameElement && !node.getAttribute('un-framename')) {\n          clonedElm.setAttribute('un-framename', '');\n        } else if (node instanceof HTMLDialogElement && node.getAttribute('un-show-modal')) {\n          clonedElm.removeAttribute('open');\n        } else if (node instanceof HTMLInputElement) {\n          if (node.type === 'radio' || node.type === 'checkbox') {\n            if (node.checked) {\n              clonedElm.setAttribute('checked', 'checked');\n            } else {\n              clonedElm.removeAttribute('checked');\n            }\n          } else {\n            clonedElm.setAttribute('value', node.value);\n          }\n        } else if (node instanceof HTMLTextAreaElement) {\n          clonedElm.innerHTML = node.value;\n        } else if (node instanceof HTMLSelectElement) {\n          this._selectElmsMap.set(node, clonedElm);\n        } else if (node instanceof HTMLCanvasElement) {\n          try {\n            const dataUrl = node.toDataURL();\n            clonedElm.setAttribute('un-data-url', dataUrl);\n          } catch (e) {\n            // do nothing, not possible to import per security exception\n          }\n        }\n\n        if (node === this._activeElement) {\n          clonedElm.setAttribute('un-active-elm', 'true');\n        }\n\n        const elmPseudoStates: string[] = [];\n        pseudoStates.forEach((pseudoState) => {\n          if (this._elmsInPseudoState[pseudoState].includes(node as Element)) {\n            elmPseudoStates.push(pseudoStatesMap[pseudoState]);\n          }\n        });\n        if (elmPseudoStates.length) {\n          clonedElm.setAttribute('un-pseudos', elmPseudoStates.join(''));\n        }\n      }\n    }\n\n    if (!clonedElm) {\n      return;\n    }\n\n    clonedParent.appendChild(clonedElm);\n\n    let childrenImported = false;\n    if (orNodeName === 'style') {\n      const sheet = (node as HTMLStyleElement).sheet;\n      if (sheet) {\n        let innerHTML = '';\n        Array.from(sheet.cssRules).forEach((cssRule) => {\n          innerHTML += cssRule.cssText;\n        });\n        (clonedElm as Element).innerHTML = innerHTML;\n        childrenImported = true;\n      }\n    }\n    if (!childrenImported) {\n      const children = childNodes(node);\n      const childrenCount = children.length;\n      for (let i = 0; i < childrenCount; i += 1) {\n        const child = children[i];\n        this._importNode(child, clonedElm);\n      }\n    }\n\n    // Updating status variables\n    if (canBeProcessorOf.head && this._insideHead) {\n      this._insideHead = false;\n    } else if (isNestedElm) {\n      this._nestedElmsCounts[orNodeName] -= 1;\n    } else if (canBeProcessorOf.malformedSelect && this._insideMalformedSelect) {\n      this._insideMalformedSelect = false;\n    } else if (canBeProcessorOf.malformedIODescendant && this._insideMalformedIODescendant) {\n      this._insideMalformedIODescendant = false;\n    } else if (canBeProcessorOf.paragraph && this._insideParagraph) {\n      this._insideParagraph = false;\n    } else if (canBeProcessorOf.descriptionItem && this._insideDescriptionItem) {\n      this._insideDescriptionItem = false;\n    } else if (canBeProcessorOf.button && this._insideButton) {\n      this._insideButton = false;\n    } else if (canBeProcessorOf.svg && this._insideSVG) {\n      this._insideSVG = false;\n    }\n  }\n}\n\nwindow._AQAExt_ = { Snapshotter };\n\nexport {};\n","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","e","toPrimitive","call","r","TypeError","String","_defineProperties","length","enumerable","configurable","writable","Object","defineProperty","key","validHeadChildren","voidElms","extraVoidElms","blockNodeNames","tableCompNames","notNestableElms","pseudoStatesMap","active","hover","pseudoStates","keys","clonedDocument","document","implementation","createHTMLDocument","childNodes","node","shadowRoot","children","Array","from","unshift","Snapshotter","doc","_this","a","n","_classCallCheck","this","_nodeId","_document","_docType","_insideHead","_insideParagraph","_insideMalformedSelect","_insideDescriptionItem","_insideButton","_insideMalformedIODescendant","_insideSVG","_selectElmsMap","Map","_nestedElmsCounts","forEach","nodeName","_activeElement","activeElement","_this$_activeElement","_elmsInPseudoState","pseudoState","_importElmsInPseudoState","removeChild","documentElement","appendChild","importNode","_importNode","clonedElm","elm","realOpts","querySelectorAll","clonedOpts","optsCount","realOpt","clonedOpt","selected","setAttribute","removeAttribute","child","toLowerCase","startsWith","head","body","_child$parentNode","comment","createComment","concat","encodeURIComponent","outerHTML","parentNode","replaceChild","headChildrenToReplace","scriptElm","createElement","innerHTML","headChildren","nodeValue","trim","_headChildren$_i$node","doctype","name","publicId","systemId","value","open","close","html","get","context","_this2","targetElms","clonedParent","_this3","toLocaleLowerCase","canBeProcessorOf","orNodeName","nodeNameAttr","isNestedElm","ShadowRoot","nodeType","Node","TEXT_NODE","_node$nodeValue","createTextNode","CDATA_SECTION_NODE","_node$nodeValue2","DOMParser","parseFromString","createCDATASection","PROCESSING_INSTRUCTION_NODE","processingInstruction","createProcessingInstruction","target","data","COMMENT_NODE","_node$nodeValue3","_getAttribute","parentNodeName","getAttribute","_getAttribute2","elmQuerySelectorAll","selectors","descendants","inlineOnlyMode","textContent","includes","_node$textContent","tmpDiv","HTMLTemplateElement","SVGElement","tmpElm","firstChild","e2","Element","attributes","attributesCount","attribute","HTMLMediaElement","HTMLImageElement","currentSrc","HTMLIFrameElement","HTMLDialogElement","HTMLInputElement","type","checked","HTMLTextAreaElement","HTMLSelectElement","set","HTMLCanvasElement","dataUrl","toDataURL","elmPseudoStates","push","join","childrenImported","sheet","cssRules","cssRule","cssText","childrenCount","window","_AQAExt_"],"sourceRoot":""}